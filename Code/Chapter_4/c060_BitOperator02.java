public class c060_BitOperator02{

	//编写一个main方法
	public static void main(String[] args){
	
		/**
		 *	>> 算数右移: 低位溢出,符号位不变,并用符号位补溢出的高位
		 *	<< 算数左移: 高位溢出,符号位不变,低位补0
		 * >>> 逻辑右移: 也称为无符号右移,低位溢出,高位补0
		 *
		 *	特别说明: 没有<<<符号
		 */
		

		//	1的补码: 00000000 00000000 00000000 00000001
		//		>>2:   000000 00000000 00000000 00000000 01	本质: 1除以2,再除以2
		//			 00000000 00000000 00000000 00000000 
		int a = 1 >> 2 ;	
		System.out.println(a);	//	0

		//	1的补码: 00000000 00000000 00000000 00000001
		//		<<2: 00000000 00000000 00000000 000001		本质: 1乘以2,再乘以2
		//		     00000000 00000000 00000000 00000100
		int c = 1 << 2 ;
	    System.out.println(c);	//	4

		System.out.println(4<<3);	//	4 * 2 * 2 * 2 = 32
		System.out.println(15<<3);	// 15 * 2 * 2 * 2 = 120
	}
}
