public class c052_DecimalConvert{

	//编写一个main方法
	public static void main(String[] args){
	
		//	十进制转换为二进制
		//	规则:将该数字,不断的除以2,直到商为0, 然后把每步得到的余数倒过来
		//	34转换成二进制
		//	次数 除数 被除数 商	余数
		//	1    2      34   17  0
		//	2	 2      17   8   1
		//	3    2	    8    4   0
		//	4    2      4    2   0
		//	5    2      2    1   0
		//	6    2      1    0   1
		//	34转换成二进制之后,结果为100010,因为一个字节长度是8位,当位数不足时高位补0
		//	所以最终结果00100010, 加上二进制符号0B, 所以是0B00100010
		System.out.println(Integer.toBinaryString(34));	//100010

		//	十进制转换为八进制
		//	规则:将该数字,不断的除以8,直到商为0, 然后把每步得到的余数倒过来
		//	131转换成八进制
		//	次数 除数 被除数 商	余数
		//	1     8     131  16  3
		//	2     8     16   2   0
		//	3     8     2    0   2
		//	131转换成八进制之后,结果为203,加上八进制符号0, 所以是0203
		System.out.println(Integer.toOctalString(131));	//0203
		
		//	十进制转换为十六进制
		//	规则:将该数字,不断的除以16,直到商为0, 然后把每步得到的余数倒过来
		//	237转换成十六进制
		//	次数 除数 被除数 商	余数
		//	1     16   237   14  13(D)
		//	2     16    14   0   14(E)
		//	237转换成十六进制之后,结果为ED,加上八进制符号0x,所以是0xED
		System.out.println(Integer.toHexString(237));	//ED
		

			


	}
}

